from osgeo import gdal
import conda
import os

conda_file_dir = conda.__file__
conda_dir = conda_file_dir.split('lib')[0]
proj_lib = os.path.join(os.path.join(conda_dir, 'share'), 'proj')
os.environ["PROJ_LIB"] = proj_lib

upper_left_x = -166.0
upper_left_y = 70.0
lower_right_x = -53.5
lower_right_y = 43.5

import rasterio
from rasterio.plot import show
from rasterio.plot import show_hist
from rasterio.mask import mask
from shapely.geometry import box
import geopandas as gpd
from fiona.crs import from_epsg
import pycrs
import rioxarray

def getFeatures(gdf):
    """Function to parse features from GeoDataFrame in such a manner that rasterio wants them"""
    import json
    return [json.loads(gdf.to_json())['features'][0]['geometry']]

input=os.listdir("/scratch/bell/wang6211/fire/data/NAfiredata/")

 for f in input:
    raster_data = rasterio.open("/scratch/bell/wang6211/fire/data/input/"+f)
    gdal.Warp('/scratch/bell/wang6211/fire/data/reproj/'+f, "/scratch/bell/wang6211/fire/data/input/"+f, xRes = -25000, yRes =25000, dstSRS="EPSG:4326")

input=os.listdir("/scratch/bell/wang6211/fire/data/input/")

for f in input:
    raster_data = rasterio.open("/scratch/bell/wang6211/fire/data/input/"+f)
    show(raster_data, cmap='terrain')
    out_tif = "/scratch/bell/wang6211/fire/data/roi/"+f

    minx, miny = -166.0, 43.5
    maxx, maxy = -53.5, 70.0
    bbox = box(minx, miny, maxx, maxy)
    geo = gpd.GeoDataFrame({'geometry': bbox}, index=[0], crs=from_epsg(4326))
    geo = geo.to_crs(crs=raster_data.crs.data)
    coords = getFeatures(geo)

    rds = rioxarray.open_rasterio("/scratch/bell/wang6211/fire/data/input/"+f)
    geometries = [
        {
            'type': 'Polygon',
            'coordinates': [[[-166.0, 43.5], [-166.0, 70.0], [-53.5, 70.0], [-53.5, 43.5]]]
        }
    ]
    geometry_crs = raster_data.crs.data  # not sure what projection the geometries are in
    print(geometry_crs)
    rds_clipped = rds.rio.clip(geometries, geometry_crs, drop=True)
    rds_clipped.rio.to_raster(out_tif)

    data = rasterio.open("/scratch/bell/wang6211/fire/data/roi/"+f)
    show(data, cmap='terrain')
    out_img, out_transform = mask(raster=raster_data, shapes=coords, crop=True)
    out_meta = raster_data.meta.copy()
    print(out_meta)
    epsg_code = int(raster_data.crs.data['init'][5:])
    print(epsg_code)
    out_meta.update({"driver": "GTiff",
                     "height": out_img.shape[1],
                     "width": out_img.shape[2],
                     "transform": out_transform,
                     "crs": pycrs.parser.from_epsg_code(epsg_code).to_proj4()}
                    )
    with rasterio.open(out_tif, "w", **out_meta) as dest:
        dest.write(out_img)
    clipped = rasterio.open(out_tif)
    show((clipped), cmap='terrain')
    raster = gdal.Open("/scratch/bell/wang6211/fire/data/input/"+f)
    print(type(raster))
    Projection
    print(raster.GetProjection())
    Dimensions
    print(raster.RasterXSize)
    print(raster.RasterYSize)
    Number of bands
    print(raster.RasterCount)
    Metadata for the raster dataset
    print(raster.GetMetadata())
    gdal.Translate('/scratch/bell/wang6211/fire/data/roi/'+f, "/scratch/bell/wang6211/fire/data/input/"+f, projWin = window)
